{
  "name": "TCU Workflow",
  "nodes": [
    {
      "parameters": {
        "public": true,
        "initialMessages": "Ol√°! üëã\nMeu nome √© Sarneyman. O que posso responder sobre as Notas Fiscais da TCU de jan/24?",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "typeVersion": 1.1,
      "position": [
        -240,
        -40
      ],
      "id": "237e0e74-7411-4069-aa7f-bd722b75eedf",
      "name": "When chat message received",
      "webhookId": "a7bce04c-12f8-4683-80e0-cb4229166d60"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "{{ $json.text }}",
        "options": {
          "replaceEmptyStrings": true
        }
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        420,
        -20
      ],
      "id": "e1f9f264-f141-4e4d-8d56-019d6f243060",
      "name": "Postgres",
      "alwaysOutputData": false,
      "credentials": {
        "postgres": {
          "id": "5PbpIn3dPyvbY8IU",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Voc√™ √© um agente especializado em comunica√ß√£o clara e natural com usu√°rios de sistemas de an√°lise de dados.\n\nSua tarefa √© gerar uma resposta textual objetiva e amig√°vel com base em:\n1 - A pergunta feita pelo usu√°rio;\n2 - O resultado exato da consulta, que pode conter nomes, n√∫meros ou ambos.\n\n---\nPergunta do usu√°rio: {{ $('When chat message received').item.json.chatInput }}\n\nResultado da consulta (formato JSON): {{ JSON.stringify($json) }}\n\nRegras obrigat√≥rias para gerar a resposta:\n- Responda diretamente √† pergunta com base somente nos dados fornecidos.\n- Nunca invente informa√ß√µes ou fa√ßa suposi√ß√µes.\n- Valores resultantes das colunas \"valor_total\" ou \"valor_nota_fiscal\" dever√£o estar formatadas em dinheiro real brasileiro.",
        "batching": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.7,
      "position": [
        640,
        -20
      ],
      "id": "c4c92751-6a1b-4a5f-9f6e-e47b4216023e",
      "name": "SQL to Portuguese LLM Chain"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=You are an SQL assistant for PostgreSQL.\n\nYour task is to convert questions written in Portuguese into valid and efficient SQL queries for a single table named `notas_fiscais`.\n\nThis table contains the following schema:\n\nCREATE TABLE IF NOT EXISTS \"notas_fiscais\" (\n    \"id\" serial primary key,\n\t\"chave_de_acesso\" TEXT NOT NULL, \n\t\"modelo\" TEXT NOT NULL, \n\t\"serie\" TEXT NOT NULL, \n\t\"numero\" TEXT NOT NULL, \n\t\"natureza\" TEXT NOT NULL, \n\t\"data_emissao\" TIMESTAMP WITHOUT TIME ZONE, \n\t\"evento_mais_recente\" TEXT NOT NULL, \n\t\"timestamp_mais_recente\" TIMESTAMP WITHOUT TIME ZONE, \n\t\"cpfcnpj_emitente\" TEXT NOT NULL, \n\t\"razao_social_emitente\" TEXT NOT NULL, \n\t\"inscricao_estadual_emitente\" TEXT NOT NULL, \n\t\"uf_emitente\" TEXT NOT NULL, \n\t\"municipio_emitente\" TEXT NOT NULL, \n\t\"cnpj_destinatario\" TEXT NOT NULL, \n\t\"nome_destinatario\" TEXT NOT NULL, \n\t\"uf_destinatario\" TEXT NOT NULL, \n\t\"indicador_ie_destinatario\" TEXT NOT NULL, \n\t\"destino_operacao\" TEXT NOT NULL, \n\t\"consumidor_final\" TEXT NOT NULL, \n\t\"presenca_comprador\" TEXT NOT NULL, \n\t\"valor_nota_fiscal\" DECIMAL(10,2) NOT NULL, \n\t\"numero_produto\" TEXT NOT NULL, \n\t\"descricao_produto_servico\" TEXT NOT NULL, \n\t\"codigo_ncm_sh\" TEXT NOT NULL, \n\t\"ncm_sh_tipo_produto\" TEXT, \n\t\"cfop\" TEXT NOT NULL, \n\t\"quantidade\" DECIMAL(10,2) NOT NULL, \n\t\"unidade\" TEXT NOT NULL, \n\t\"valor_unitario\" DECIMAL(10,2) NOT NULL, \n\t\"valor_total\" DECIMAL(10,2) NOT NULL\n);\n\nüß† Semantic mapping:\n- \"nota fiscal\", \"nota\", \"nfs\", \"NF\" ‚Üí refers to unique invoices identified by `chave_de_acesso`\n- \"valor da nota\", \"valor total da nota fiscal\" ‚Üí refers to `valor_nota_fiscal`\n- \"produto\" ‚Üí refers to `descricao_produto_servico`\n- \"quem vendeu mais\" ‚Üí analyze `razao_social_emitente` with `SUM(valor_nota_fiscal)`\n\nüîÅ Important logic:\n- When counting invoices (\"notas fiscais\"), always use: COUNT(DISTINCT chave_de_acesso)\n- Use GROUP BY clause if using aggregating functions (SUM,COUNT).\n- Every SQL statement **must start with SELECT** ‚Äî never omit it.\n- Every SQL statement must contain FROM clause with the table name used in order to fetch results.\n- Every SQL statement **must have FROM notas_fiscais** ‚Äî never omit it.\n- Only return one single SQL query per answer.\n\n‚ö†Ô∏è Strict instructions:\n- All data is in a **single table**. Do not use JOINs.\n- Use **only the columns listed above**. Do not invent or assume columns.\n- Do not include SQL comments (e.g. `-- ...`).\n- Do not use Markdown formatting (e.g. triple backticks).\n- Respond with **only the SQL query**, clean and ready to execute ‚Äî no explanations.\n\nUser question (in Portuguese):  \n{{ $json.chatInput }}\n",
        "batching": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.7,
      "position": [
        60,
        -20
      ],
      "id": "c8dce7a8-789d-4263-9b98-f07a75a36a8e",
      "name": "Portuguese to SQL LLM Chain"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        280,
        -220
      ],
      "id": "193e2d17-39ea-4d3b-a228-d615fe41c31e",
      "name": "Base Populada"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "otE3Fl75YQDOfM4x",
          "mode": "list",
          "cachedResultName": "ETF Workflow"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [],
          "schema": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "options": {}
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        100,
        -220
      ],
      "id": "f67560e1-d410-4111-8857-3143d69a512c",
      "name": "Workflow ETF"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        1000,
        -20
      ],
      "id": "9975a09a-4519-4644-b2f2-8383559e2df0",
      "name": "Fim"
    },
    {
      "parameters": {
        "model": "mistral:latest",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOllama",
      "typeVersion": 1,
      "position": [
        600,
        140
      ],
      "id": "754a1cf9-1c4f-4fd3-b357-26e61da28968",
      "name": "Ollama Model 2",
      "credentials": {
        "ollamaApi": {
          "id": "xHuYe0MDGOs9IpBW",
          "name": "Local Ollama service"
        }
      }
    },
    {
      "parameters": {
        "model": "llama3:8b",
        "options": {
          "temperature": 0,
          "topP": 1,
          "repeatPenalty": 1
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOllama",
      "typeVersion": 1,
      "position": [
        -20,
        140
      ],
      "id": "3fe57b47-7a0c-4f16-ac2c-1ac50fca0b52",
      "name": "Ollama Model 1",
      "credentials": {
        "ollamaApi": {
          "id": "xHuYe0MDGOs9IpBW",
          "name": "Local Ollama service"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "When chat message received": {
      "main": [
        [
          {
            "node": "Workflow ETF",
            "type": "main",
            "index": 0
          },
          {
            "node": "Portuguese to SQL LLM Chain",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres": {
      "main": [
        [
          {
            "node": "SQL to Portuguese LLM Chain",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Portuguese to SQL LLM Chain": {
      "main": [
        [
          {
            "node": "Postgres",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Workflow ETF": {
      "main": [
        [
          {
            "node": "Base Populada",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SQL to Portuguese LLM Chain": {
      "main": [
        [
          {
            "node": "Fim",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Ollama Model 2": {
      "ai_languageModel": [
        [
          {
            "node": "SQL to Portuguese LLM Chain",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Ollama Model 1": {
      "ai_languageModel": [
        [
          {
            "node": "Portuguese to SQL LLM Chain",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "4df71123-1bb4-48dc-9dbb-f54b7e89feaf",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "558d88703fb65b2d0e44613bc35916258b0f0bf983c5d4730c00c424b77ca36a"
  },
  "id": "IoKyRnusyiwkqkVY",
  "tags": []
}